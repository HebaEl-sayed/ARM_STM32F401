/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_GPIO_H
#define _MOCK_GPIO_H

#include "unity.h"
#include "GPIO.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_GPIO_Init(void);
void mock_GPIO_Destroy(void);
void mock_GPIO_Verify(void);




#define GPIO_INITPIN_IgnoreAndReturn(cmock_retval) GPIO_INITPIN_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_INITPIN_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_enuErrorStatus_t cmock_to_return);
#define GPIO_INITPIN_StopIgnore() GPIO_INITPIN_CMockStopIgnore()
void GPIO_INITPIN_CMockStopIgnore(void);
#define GPIO_INITPIN_ExpectAndReturn(GPIO_CFG, cmock_retval) GPIO_INITPIN_CMockExpectAndReturn(__LINE__, GPIO_CFG, cmock_retval)
void GPIO_INITPIN_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_t* GPIO_CFG, GPIO_enuErrorStatus_t cmock_to_return);
typedef GPIO_enuErrorStatus_t (* CMOCK_GPIO_INITPIN_CALLBACK)(GPIO_t* GPIO_CFG, int cmock_num_calls);
void GPIO_INITPIN_AddCallback(CMOCK_GPIO_INITPIN_CALLBACK Callback);
void GPIO_INITPIN_Stub(CMOCK_GPIO_INITPIN_CALLBACK Callback);
#define GPIO_INITPIN_StubWithCallback GPIO_INITPIN_Stub
#define GPIO_SET_PINVALUE_IgnoreAndReturn(cmock_retval) GPIO_SET_PINVALUE_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_SET_PINVALUE_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_enuErrorStatus_t cmock_to_return);
#define GPIO_SET_PINVALUE_StopIgnore() GPIO_SET_PINVALUE_CMockStopIgnore()
void GPIO_SET_PINVALUE_CMockStopIgnore(void);
#define GPIO_SET_PINVALUE_ExpectAndReturn(GPIO_PORT, GPIO_PIN, GPIO_STATE, cmock_retval) GPIO_SET_PINVALUE_CMockExpectAndReturn(__LINE__, GPIO_PORT, GPIO_PIN, GPIO_STATE, cmock_retval)
void GPIO_SET_PINVALUE_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* GPIO_PORT, u32 GPIO_PIN, u32 GPIO_STATE, GPIO_enuErrorStatus_t cmock_to_return);
typedef GPIO_enuErrorStatus_t (* CMOCK_GPIO_SET_PINVALUE_CALLBACK)(void* GPIO_PORT, u32 GPIO_PIN, u32 GPIO_STATE, int cmock_num_calls);
void GPIO_SET_PINVALUE_AddCallback(CMOCK_GPIO_SET_PINVALUE_CALLBACK Callback);
void GPIO_SET_PINVALUE_Stub(CMOCK_GPIO_SET_PINVALUE_CALLBACK Callback);
#define GPIO_SET_PINVALUE_StubWithCallback GPIO_SET_PINVALUE_Stub
#define GPIO_GET_PINVALUE_IgnoreAndReturn(cmock_retval) GPIO_GET_PINVALUE_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_GET_PINVALUE_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_enuErrorStatus_t cmock_to_return);
#define GPIO_GET_PINVALUE_StopIgnore() GPIO_GET_PINVALUE_CMockStopIgnore()
void GPIO_GET_PINVALUE_CMockStopIgnore(void);
#define GPIO_GET_PINVALUE_ExpectAndReturn(GPIO_PORT, GPIO_PIN, GPIO_STATE, cmock_retval) GPIO_GET_PINVALUE_CMockExpectAndReturn(__LINE__, GPIO_PORT, GPIO_PIN, GPIO_STATE, cmock_retval)
void GPIO_GET_PINVALUE_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* GPIO_PORT, u32 GPIO_PIN, u32* GPIO_STATE, GPIO_enuErrorStatus_t cmock_to_return);
typedef GPIO_enuErrorStatus_t (* CMOCK_GPIO_GET_PINVALUE_CALLBACK)(void* GPIO_PORT, u32 GPIO_PIN, u32* GPIO_STATE, int cmock_num_calls);
void GPIO_GET_PINVALUE_AddCallback(CMOCK_GPIO_GET_PINVALUE_CALLBACK Callback);
void GPIO_GET_PINVALUE_Stub(CMOCK_GPIO_GET_PINVALUE_CALLBACK Callback);
#define GPIO_GET_PINVALUE_StubWithCallback GPIO_GET_PINVALUE_Stub
#define GPIO_AF_CFG_IgnoreAndReturn(cmock_retval) GPIO_AF_CFG_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_AF_CFG_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_enuErrorStatus_t cmock_to_return);
#define GPIO_AF_CFG_StopIgnore() GPIO_AF_CFG_CMockStopIgnore()
void GPIO_AF_CFG_CMockStopIgnore(void);
#define GPIO_AF_CFG_ExpectAndReturn(GPIO_PORT, GPIO_PIN, GPIO_Func, cmock_retval) GPIO_AF_CFG_CMockExpectAndReturn(__LINE__, GPIO_PORT, GPIO_PIN, GPIO_Func, cmock_retval)
void GPIO_AF_CFG_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* GPIO_PORT, u32 GPIO_PIN, u32 GPIO_Func, GPIO_enuErrorStatus_t cmock_to_return);
typedef GPIO_enuErrorStatus_t (* CMOCK_GPIO_AF_CFG_CALLBACK)(void* GPIO_PORT, u32 GPIO_PIN, u32 GPIO_Func, int cmock_num_calls);
void GPIO_AF_CFG_AddCallback(CMOCK_GPIO_AF_CFG_CALLBACK Callback);
void GPIO_AF_CFG_Stub(CMOCK_GPIO_AF_CFG_CALLBACK Callback);
#define GPIO_AF_CFG_StubWithCallback GPIO_AF_CFG_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
